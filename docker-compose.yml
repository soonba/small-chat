version: "3.8"
services:
  mongodb:
    image: mongo
    networks:
      - small-chat
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      #      - MONGO_INITDB_ROOT_USERNAME=root
      #      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGODB_DATABASE="small_chat"
  #  mongo-express:
  #    image: mongo-express
  #    networks:
  #      - small-chat
  #    container_name: mongo-express
  #    restart: always
  #    ports:
  #      - "8081:8081"
  #    environment:
  #      #      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
  #      #      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
  #      - ME_CONFIG_MONGODB_SERVER=mongodb
  #    links:
  #      - mongodb
  #    depends_on:
  #      - mongodb
  #  chat-client:
  #    build:
  #      context: chat-client/
  #    container_name: chat-client
  #    image: seonba/chat-client
  #    ports:
  #      - "3000:3000"
  #    networks:
  #      - small-chat
  #    restart: always
  #    depends_on:
  #      - chat-service
  #  chat-service:
  #    build:
  #      context: chat-service/
  #    container_name: chat-service
  #    image: seonba/chat-service
  #    ports:
  #      - "3010:3000"
  #    networks:
  #      - small-chat
  #    restart: always
  #  chat-backend:
  #    build:
  #      context: chat-backend/
  #    image: seonba/chat-backend
  #    container_name: chat-backend
  #    ports:
  #      - "8080:8080"
  #    networks:
  #      - small-chat
  #    environment:
  #      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/small_chat
  #      - SPRING_DATASOURCE_USERNAME=postgres
  #      - SPRING_DATASOURCE_PASSWORD=postgres
  #      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
  #    restart: always
  #    depends_on:
  #      - postgres
  #  postgres:
  #    container_name: postgres
  #    image: postgres:14-alpine
  #    ports:
  #      - "5434:5432"
  #    restart: always
  #    networks:
  #      - small-chat
  #    environment:
  #      - POSTGRES_USER=postgres
  #      - POSTGRES_PASSWORD=postgres
  #      - POSTGRES_DB=small_chat
  #  pubsub:
  #    image: redis:6.2.4-alpine
  #    container_name: redis_pubsub
  #    networks:
  #      - small-chat
  #    hostname: redis
  #    ports:
  #      - "6379:6379"
  #    restart: always
  zookeeper-1:
    # arm- 5.5.1 amd- latest
    image: confluentinc/cp-zookeeper:latest
    #    image: confluentinc/cp-zookeeper:5.5.1
    networks:
      - small-chat
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
  kafka-1:
    # arm- 5.5.1 amd- latest
    image: confluentinc/cp-kafka:latest
    #    image: confluentinc/cp-kafka:5.5.1
    networks:
      - small-chat
    container_name: kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      #      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 4
#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    networks:
#      - small-chat
#    container_name: kafka-ui
#    ports:
#      - "8989:8080"
#    restart: always
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:32181


networks:
  small-chat:
    driver: bridge
